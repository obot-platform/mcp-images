name: Build and Push Nanobot Base Image
permissions:
  id-token: write
  contents: read
  packages: write
  actions: read
  security-events: write
on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - "v*"
    paths:
      - Dockerfile.nanobot
      - scripts/nanobot.sh
jobs:
  docker-build:
    runs-on: depot-ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Checkout nanobot
        uses: actions/checkout@v4
        with:
          repository: nanobot-ai/nanobot
          path: nanobot
      - name: Setup Depot
        uses: depot/setup-action@v1
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: depot/build-push-action@v1
        id: build-and-push
        with:
          project: bbqjs4tj1g
          context: .
          push: true
          pull: true
          file: Dockerfile.nanobot
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository }}/nanobot:${{ github.ref_name }}
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.8.1
        with:
          cosign-release: "v2.4.3"
      - name: Check install!
        run: cosign version
      - name: Sign Images
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: |
            ghcr.io/${{ github.repository }}/nanobot:${{ github.ref_name }}
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes ${images}
      - name: Setup crane
        uses: imjasonh/setup-crane@v0.4
      - name: Copy image to latest tag
        if: ${{ github.ref_type == 'tag' && !contains(github.ref_name, '-rc') }}
        run: |
          crane tag ghcr.io/${{ github.repository }}/nanobot:${{ github.ref_name }} latest
      - name: Run Trivy
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ghcr.io/${{ github.repository }}/nanobot:${{ github.ref_name }}
          skip-dirs: "**/venv"
          format: "sarif"
          output: "trivy-results-nanobot.sarif"
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results-nanobot.sarif

  build-base-images:
    needs: docker-build
    runs-on: depot-ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: obot-platform/mcp-images/.github/workflows/base-images.yml@main

  build-mcp-servers-images:
    needs: build-base-images
    runs-on: depot-ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: obot-platform/mcp-images/.github/workflows/mcp-servers.yml@main

  build-repackaged-images:
    needs: build-base-images
    runs-on: depot-ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: obot-platform/mcp-images/.github/workflows/repackage.yml@main
