images:
  - name: antv-charts
    type: npx
    protocol: http
    package: "@antv/mcp-server-chart@0.8.3"
    command: mcp-server-chart --transport streamable --endpoint "/" --port 1122
  - name: atlassian
    type: docker
    package: ghcr.io/sooperset/mcp-atlassian:latest
    # @TODO FINISH COMMAND
    command: --transport streamable-http --port 9000
  - name: aws-cdk
    type: uvx
    protocol: stdio
    package: awslabs.cdk-mcp-server@1.0.7
  - name: aws-documentation
    type: uvx
    protocol: stdio
    package: awslabs.aws-documentation-mcp-server@1.1.6
  - name: aws-eks
    type: uvx
    protocol: stdio
    package: awslabs.eks-mcp-server@0.1.13
    command: awslabs.eks-mcp-server --allow-write --allow-sensitive-data-access
  - name: aws-kendra
    type: uvx
    protocol: stdio
    package: awslabs.amazon-kendra-index-mcp-server@1.0.6
  - name: aws-redshift
    type: uvx
    protocol: stdio
    package: awslabs.redshift-mcp-server@0.0.7
  - name: azure
    type: npx
    protocol: stdio
    package: "@azure/mcp@latest"
    # @TODO FINISH COMMAND
    command: server start
  - name: browserbase
    type: npx
    protocol: stdio
    package: "@browserbasehq/mcp-server-browserbase@2.0.1"
  - name: context7
    type: npx
    protocol: stdio
    package: "@upstash/context7-mcp@1.0.16"
  - name: datadog
    type: npx
    protocol: stdio
    package: "@winor30/mcp-server-datadog"
  - name: duckduckgo-search
    type: uvx
    protocol: stdio
    package: duckduckgo-mcp-server@0.1.1
  - name: elasticsearch
    type: docker
    protocol: http
    package: awslabs.cdk-mcp-server@1.0.7
  - name: exa-search
    protocol: npx
    package: exa-mcp-server@2.0.3
    # @TODO FINISH COMMAND
    command: --tools=web_search_exa,research_paper_search,company_research,crawling,competitor_finder,linkedin_search,wikipedia_search_exa,github_search
  - name: firecrawl
    type: npx
    protocol: stdio
    package: firecrawl-mcp@2.0.2
  # @TODO FIGURE OUT WHAT TO DO HERE SINCE WE ALREADY REPACKAGED GITHUB
  - name: github-enterprise
    type: docker
  # @TODO FIGURE OUT WHAT TO DO HERE SINCE WE ALREADY REPACKAGED HUBSPOT
  - name: hubspot
    type: docker
  - name: mongodb-atlas
    type: npx
    protocol: stdio
    package: mongodb-mcp-server@0.3.0
    # @TODO FINISH COMMAND
    command: --apiClientId <apiClientId> --apiClientSecret <apiClientSecret> --disabledTools mongodb
  - name: mongodb-database
    type: npx
    protocol: stdio
    package: mongodb-mcp-server@0.3.0
    # @TODO FINISH COMMAND
    command: --connectionString <connectionString>
  - name: mysql
    type: uvx
    protocol: stdio
    package: mysql-mcp-server
    command: mysql_mcp_server
  - name: playwright
    type: npx
    protocol: stdio
    package: "@playwright/mcp@0.0.35"
  - name: postgresql
    type: uvx
    protocol: stdio
    package: postgres-mcp
    # @TODO FINISH COMMAND
    command: --accessMode=unrestricted
  - name: supabase
    type: npx
    protocol: stdio
    package: "@supabase/mcp-server-supabase@0.5.1"
  - name: tavily
    type: npx
    protocol: stdio
    package: tavily-mcp@0.2.9
  - name: wordpress
    type: npx
    protocol: stdio
    package: "@automattic/mcp-server-remote@0.2.10"
